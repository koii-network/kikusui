[{"/Users/elliemiller/Metaverse/Koii/Kikusui/src/Finnie/index.ts":"1"},{"size":3224,"mtime":1633569954761,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1945p11","/Users/elliemiller/Metaverse/Koii/Kikusui/src/Finnie/index.ts",["6","7","8","9"],{"ruleId":"10","severity":1,"message":"11","line":5,"column":18,"nodeType":"12","messageId":"13","endLine":5,"endColumn":21,"suggestions":"14"},{"ruleId":"15","severity":1,"message":"16","line":31,"column":3,"nodeType":"17","messageId":"18","endLine":31,"endColumn":36},{"ruleId":"15","severity":1,"message":"19","line":31,"column":21,"nodeType":"20","messageId":"21","endLine":31,"endColumn":35},{"ruleId":"10","severity":1,"message":"11","line":89,"column":59,"nodeType":"12","messageId":"13","endLine":89,"endColumn":62,"suggestions":"22"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["23","24"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","Argument 'hasPermissions' should be typed.","Identifier","missingArgType",["25","26"],{"messageId":"27","fix":"28","desc":"29"},{"messageId":"30","fix":"31","desc":"32"},{"messageId":"27","fix":"33","desc":"29"},{"messageId":"30","fix":"34","desc":"32"},"suggestUnknown",{"range":"35","text":"36"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"35","text":"37"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"38","text":"36"},{"range":"38","text":"37"},[67,70],"unknown","never",[2407,2410]]