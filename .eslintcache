[{"/Users/elliemiller/Metaverse/Koii/Kikusui/src/index.ts":"1","/Users/elliemiller/Metaverse/Koii/Kikusui/tests/checkForFinnie.test.ts":"2","/Users/elliemiller/Metaverse/Koii/Kikusui/tests/connectToFinnie.test.ts":"3","/Users/elliemiller/Metaverse/Koii/Kikusui/tests/connectToFinnieMock.ts":"4","/Users/elliemiller/Metaverse/Koii/Kikusui/src/check.ts":"5","/Users/elliemiller/Metaverse/Koii/Kikusui/src/connect.ts":"6"},{"size":400,"mtime":1633289676825,"results":"7","hashOfConfig":"8"},{"size":821,"mtime":1633289723412,"results":"9","hashOfConfig":"8"},{"size":1201,"mtime":1633286886244,"results":"10","hashOfConfig":"8"},{"size":288,"mtime":1633286673402},{"size":807,"mtime":1633289576878,"results":"11","hashOfConfig":"8"},{"size":338,"mtime":1633289822795,"results":"12","hashOfConfig":"8"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1945p11",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elliemiller/Metaverse/Koii/Kikusui/src/index.ts",[],"/Users/elliemiller/Metaverse/Koii/Kikusui/tests/checkForFinnie.test.ts",[],"/Users/elliemiller/Metaverse/Koii/Kikusui/tests/connectToFinnie.test.ts",[],"/Users/elliemiller/Metaverse/Koii/Kikusui/src/check.ts",["23","24"],"/Users/elliemiller/Metaverse/Koii/Kikusui/src/connect.ts",["25","26","27"],{"ruleId":"28","severity":1,"message":"29","line":3,"column":18,"nodeType":"30","messageId":"31","endLine":3,"endColumn":21,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":13,"column":22,"nodeType":"35","messageId":"36","endLine":13,"endColumn":55},{"ruleId":"28","severity":1,"message":"29","line":4,"column":23,"nodeType":"30","messageId":"31","endLine":4,"endColumn":26,"suggestions":"37"},{"ruleId":"28","severity":1,"message":"29","line":5,"column":26,"nodeType":"30","messageId":"31","endLine":5,"endColumn":29,"suggestions":"38"},{"ruleId":"33","severity":1,"message":"34","line":8,"column":24,"nodeType":"35","messageId":"36","endLine":8,"endColumn":35},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["39","40"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["41","42"],["43","44"],{"messageId":"45","fix":"46","desc":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"45","fix":"51","desc":"47"},{"messageId":"48","fix":"52","desc":"50"},{"messageId":"45","fix":"53","desc":"47"},{"messageId":"48","fix":"54","desc":"50"},"suggestUnknown",{"range":"55","text":"56"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"55","text":"57"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"58","text":"56"},{"range":"58","text":"57"},{"range":"59","text":"56"},{"range":"59","text":"57"},[55,58],"unknown","never",[77,80],[108,111]]